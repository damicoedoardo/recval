on:
  push:
    branches:
      - "**"
    tags-ignore:
      - "*.*.*"

name: Build & Test

concurrency:
  group: ci-build-and-test

env:
  poetry-version: 1.3.1
  python-version: 3.10.6

jobs:
  poetry:
    name: Prepare Poetry Environment
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout

      - uses: actions/setup-python@v4
        name: Setup Python
        with:
          python-version: ${{ env.python-version }}

      - uses: abatilo/actions-poetry@v2.1.1
        name: Install Poetry
        with:
          poetry-version: ${{ env.poetry-version }}

      - name: Update Poetry cache location
        run: poetry config virtualenvs.in-project true

      - id: venv_cache
        uses: actions/cache@v3
        name: Cache or Restore venv
        with:
          path: .venv
          key: venv-${{ env.python-version }}-${{ env.poetry-version }}-lock-${{ hashFiles('poetry.lock') }}

      - name: Install Poetry Dependencies
        run: poetry install
        if: steps.venv_cache.outputs.cache-hit != 'true'

  format-check:
    name: Check Code Formatting
    needs: poetry
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout

      - uses: actions/setup-python@v4
        name: Setup Python
        with:
          python-version: ${{ env.python-version }}

      - uses: abatilo/actions-poetry@v2.1.1
        name: Install Poetry
        with:
          poetry-version: ${{ env.poetry-version }}

      - name: Update Poetry cache location
        run: poetry config virtualenvs.in-project true

      - id: venv_cache
        uses: actions/cache@v3
        name: Restore venv
        with:
          path: .venv
          key: venv-${{ env.python-version }}-${{ env.poetry-version }}-lock-${{ hashFiles('poetry.lock') }}

      - name: Run Format Check
        run: make format-check

  linter:
    name: Check Linting
    needs: poetry
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout

      - uses: actions/setup-python@v4
        name: Setup Python
        with:
          python-version: ${{ env.python-version }}

      - uses: abatilo/actions-poetry@v2.1.1
        name: Install Poetry
        with:
          poetry-version: ${{ env.poetry-version }}

      - name: Update Poetry cache location
        run: poetry config virtualenvs.in-project true

      - id: venv_cache
        uses: actions/cache@v3
        name: Restore venv
        with:
          path: .venv
          key: venv-${{ env.python-version }}-${{ env.poetry-version }}-lock-${{ hashFiles('poetry.lock') }}

      - name: Run Linter
        run: make lint

  Type-Check:
    name: Check Static Typing
    needs: poetry
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout

      - uses: actions/setup-python@v4
        name: Setup Python
        with:
          python-version: ${{ env.python-version }}

      - uses: abatilo/actions-poetry@v2.1.1
        name: Install Poetry
        with:
          poetry-version: ${{ env.poetry-version }}

      - name: Update Poetry cache location
        run: poetry config virtualenvs.in-project true

      - id: venv_cache
        uses: actions/cache@v3
        name: Restore venv
        with:
          path: .venv
          key: venv-${{ env.python-version }}-${{ env.poetry-version }}-lock-${{ hashFiles('poetry.lock') }}

      - name: Run Static Type Checking
        run: make type-check

  test:
    name: Check Tests Passing
    needs: [poetry, format-check, linter, Type-Check]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout

      - uses: actions/setup-python@v4
        name: Setup Python
        with:
          python-version: ${{ env.python-version }}

      - uses: abatilo/actions-poetry@v2.1.1
        name: Install Poetry
        with:
          poetry-version: ${{ env.poetry-version }}

      - name: Update Poetry cache location
        run: poetry config virtualenvs.in-project true

      - id: venv_cache
        uses: actions/cache@v3
        name: Restore venv
        with:
          path: .venv
          key: venv-${{ env.python-version }}-${{ env.poetry-version }}-lock-${{ hashFiles('poetry.lock') }}

      - name: Run tests
        run: make test
