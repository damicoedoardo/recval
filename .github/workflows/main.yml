on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      #- uses: ./.github/actions/setup-poetry
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10.9"
      - name: install poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction
        shell: bash

  format-check:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - run: poetry run black --check src tests
      - run: poetry run isort --check src tests

  lint:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - run: poetry run pylint -j 0 src
      - run: poetry run pylint -j 0 -d missing-function-docstring -d missing-class-docstring tests

  type-check:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - run: poetry run mypy src tests

  tests:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - run: poetry run pytest -vv -n auto --cov=src --cov-fail-under=100
